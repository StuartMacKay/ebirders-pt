# Generated by Django 5.2.4 on 2025-07-20 14:18

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('news', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            sql="CREATE MATERIALIZED VIEW year_list AS "
                "SELECT DISTINCT ON (species_id, country_id, state_id, county_id) "
                "identifier, checklist_id, species_id, observer_id, country_id, state_id, county_id, location_id, date, count, approved, reason "
                "FROM data_observation "
                "INNER JOIN data_species ON species_id = data_species.species_code "
                "WHERE data_species.category = 'species' AND published = true "
                "ORDER BY species_id, country_id, state_id, county_id, started",
            reverse_sql="DROP MATERIALIZED VIEW year_list"
        ),
        migrations.RunSQL(
            sql="CREATE MATERIALIZED VIEW observer_species_monthly AS "
                "SELECT DISTINCT ON (observer_id, species_id, country_id, state_id, county_id, year, month) "
                "data_observation.identifier as identifier, observer_id, data_observer.name as name, species_id, country_id, state_id, county_id, "
                "EXTRACT (YEAR FROM date) AS year, "
                "EXTRACT (MONTH FROM date) AS month "
                "FROM data_observation "
                "INNER JOIN data_species ON species_id = data_species.species_code "
                "INNER JOIN data_observer ON observer_id = data_observer.identifier "
                "WHERE data_species.category = 'species' AND published = true "
                "ORDER BY observer_id, species_id, country_id, state_id, county_id, year, month",
            reverse_sql="DROP MATERIALIZED VIEW observer_species_monthly"
        ),
        migrations.RunSQL(
            sql="CREATE MATERIALIZED VIEW observer_species_weekly AS "
                "SELECT DISTINCT ON (observer_id, species_id, country_id, state_id, county_id, year, week) "
                "data_observation.identifier as identifier, observer_id, data_observer.name as name, species_id, country_id, state_id, county_id, "
                "EXTRACT (YEAR FROM date) AS year, "
                "EXTRACT (WEEK FROM date) AS week "
                "FROM data_observation "
                "INNER JOIN data_species ON species_id = data_species.species_code "
                "INNER JOIN data_observer ON observer_id = data_observer.identifier "
                "WHERE data_species.category = 'species' AND published = true "
                "ORDER BY observer_id, species_id, country_id, state_id, county_id, year, week",
            reverse_sql="DROP MATERIALIZED VIEW observer_species_weekly"
        ),
        migrations.RunSQL(
            sql="CREATE MATERIALIZED VIEW observer_species_latest AS "
                "SELECT DISTINCT ON (observer_id, species_id, country_id, state_id, county_id) "
                "data_observation.identifier as identifier, observer_id, data_observer.name as name, species_id, country_id, state_id, county_id "
                "FROM data_observation "
                "INNER JOIN data_species ON species_id = data_species.species_code "
                "INNER JOIN data_observer ON observer_id = data_observer.identifier "
                "WHERE data_species.category = 'species' AND published = true "
                "AND date <= CURRENT_DATE AND date > CURRENT_DATE - INTERVAL '7 days' "
                "ORDER BY observer_id, species_id, country_id, state_id, county_id",
            reverse_sql="DROP MATERIALIZED VIEW observer_species_latest"
        )
    ]
